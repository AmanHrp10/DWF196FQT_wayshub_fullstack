[{"/home/amanudin/Documents/bootcamp/task/client/src/index.js":"1","/home/amanudin/Documents/bootcamp/task/client/src/context/appContext.jsx":"2","/home/amanudin/Documents/bootcamp/task/client/src/pages/landing/index.jsx":"3","/home/amanudin/Documents/bootcamp/task/client/src/pages/contentCreator/contentCreatorPage.jsx":"4","/home/amanudin/Documents/bootcamp/task/client/src/pages/editchannel/index.jsx":"5","/home/amanudin/Documents/bootcamp/task/client/src/pages/subscription/index.jsx":"6","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/login/index.jsx":"7","/home/amanudin/Documents/bootcamp/task/client/src/API/homeVideo.js":"8","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/formAddVideo/index.jsx":"9","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/myChannel/index.jsx":"10","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/sidebar/index.jsx":"11","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/descriptionChannel/index.jsx":"12","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/comment/index.jsx":"13","/home/amanudin/Documents/bootcamp/task/client/src/API/myVideos.js":"14","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/formEditChannel/index.jsx":"15","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/navbar/index.jsx":"16","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/contentCreator/index.jsx":"17","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/Card/index.jsx":"18","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/detailVideo/index.jsx":"19","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/myVideos/index.jsx":"20","/home/amanudin/Documents/bootcamp/task/client/src/config/api.js":"21","/home/amanudin/Documents/bootcamp/task/client/src/pages/myChannel/index.jsx":"22","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/register/index.jsx":"23","/home/amanudin/Documents/bootcamp/task/client/src/components/atoms/textarea/index.jsx":"24","/home/amanudin/Documents/bootcamp/task/client/src/components/atoms/fileInput/index.jsx":"25","/home/amanudin/Documents/bootcamp/task/client/src/components/atoms/button/index.jsx":"26","/home/amanudin/Documents/bootcamp/task/client/src/pages/home/index.jsx":"27","/home/amanudin/Documents/bootcamp/task/client/src/pages/addVideo/index.jsx":"28","/home/amanudin/Documents/bootcamp/task/client/src/components/privateRoute/index.jsx":"29","/home/amanudin/Documents/bootcamp/task/client/src/components/atoms/formInput/index.jsx":"30","/home/amanudin/Documents/bootcamp/task/client/src/pages/detailVideo/index.jsx":"31","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/mainMenu/index.js":"32","/home/amanudin/Documents/bootcamp/task/client/src/App.js":"33","/home/amanudin/Documents/bootcamp/task/client/src/pages/mySubscribers/index.jsx":"34","/home/amanudin/Documents/bootcamp/task/client/src/pages/subscriber/index.jsx":"35","/home/amanudin/Documents/bootcamp/task/client/src/reportWebVitals.js":"36"},{"size":621,"mtime":1607501925162,"results":"37","hashOfConfig":"38"},{"size":2082,"mtime":1609326093702,"results":"39","hashOfConfig":"38"},{"size":979,"mtime":1607687128240,"results":"40","hashOfConfig":"38"},{"size":296,"mtime":1607334108245,"results":"41","hashOfConfig":"38"},{"size":362,"mtime":1607813997678,"results":"42","hashOfConfig":"38"},{"size":1850,"mtime":1609344404317,"results":"43","hashOfConfig":"38"},{"size":2105,"mtime":1607890341832,"results":"44","hashOfConfig":"38"},{"size":2391,"mtime":1606576267124,"results":"45","hashOfConfig":"38"},{"size":3590,"mtime":1609399426331,"results":"46","hashOfConfig":"38"},{"size":3712,"mtime":1609470183334,"results":"47","hashOfConfig":"38"},{"size":3697,"mtime":1609429835462,"results":"48","hashOfConfig":"38"},{"size":148,"mtime":1607891664032,"results":"49","hashOfConfig":"38"},{"size":525,"mtime":1609425327679,"results":"50","hashOfConfig":"38"},{"size":977,"mtime":1606560245571,"results":"51","hashOfConfig":"38"},{"size":3055,"mtime":1609321166015,"results":"52","hashOfConfig":"38"},{"size":3160,"mtime":1609349450738,"results":"53","hashOfConfig":"38"},{"size":7158,"mtime":1609386516171,"results":"54","hashOfConfig":"38"},{"size":1540,"mtime":1609347196888,"results":"55","hashOfConfig":"38"},{"size":10784,"mtime":1609425487136,"results":"56","hashOfConfig":"38"},{"size":1405,"mtime":1609265997572,"results":"57","hashOfConfig":"38"},{"size":307,"mtime":1607497051423,"results":"58","hashOfConfig":"38"},{"size":277,"mtime":1609251414907,"results":"59","hashOfConfig":"38"},{"size":2907,"mtime":1607890507081,"results":"60","hashOfConfig":"38"},{"size":339,"mtime":1607817967859,"results":"61","hashOfConfig":"38"},{"size":904,"mtime":1607823894191,"results":"62","hashOfConfig":"38"},{"size":194,"mtime":1607542678016,"results":"63","hashOfConfig":"38"},{"size":4567,"mtime":1609519530613,"results":"64","hashOfConfig":"38"},{"size":435,"mtime":1606782566819,"results":"65","hashOfConfig":"38"},{"size":937,"mtime":1607643770687,"results":"66","hashOfConfig":"38"},{"size":289,"mtime":1607493774274,"results":"67","hashOfConfig":"38"},{"size":285,"mtime":1609251334384,"results":"68","hashOfConfig":"38"},{"size":583,"mtime":1609338246258,"results":"69","hashOfConfig":"38"},{"size":2247,"mtime":1609495806351,"results":"70","hashOfConfig":"38"},{"size":2780,"mtime":1609425082729,"results":"71","hashOfConfig":"38"},{"size":2569,"mtime":1609496838014,"results":"72","hashOfConfig":"38"},{"size":362,"mtime":1606264620604,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1piznku",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"81"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"/home/amanudin/Documents/bootcamp/task/client/src/index.js",[],["161","162"],"/home/amanudin/Documents/bootcamp/task/client/src/context/appContext.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/pages/landing/index.jsx",[],["163","164"],"/home/amanudin/Documents/bootcamp/task/client/src/pages/contentCreator/contentCreatorPage.jsx",[],["165","166"],"/home/amanudin/Documents/bootcamp/task/client/src/pages/editchannel/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/pages/subscription/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/login/index.jsx",["167"],"import FormInput from '../../atoms/formInput';\nimport Button from '../../atoms/button';\nimport { Fragment, useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from '../../../context/appContext';\nimport { API, setToken } from '../../../config/api';\nimport './login.css';\n\nexport default function Login() {\n  const [state, dispatch] = useContext(AppContext);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n  const router = useHistory();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const body = JSON.stringify({ email, password });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      const response = await API.post('/login', body, config);\n\n      //? Context\n      dispatch({\n        type: 'LOGIN',\n        payload: response.data.data.channel,\n      });\n\n      //? take a token\n      setToken(response.data.data.channel.token);\n\n      setFormData({ email: '', password: '' });\n\n      //? Route\n      router.push('/');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  return (\n    <Fragment>\n      <div className='wrapper login'>\n        <div className='wrapper-form'>\n          <h3 className='text-white'>Sign In</h3>\n          <FormInput\n            type='text'\n            title='Email'\n            value={email}\n            name='email'\n            customClass='inputLogin'\n            onChange={(e) => handleChange(e)}\n          />\n          <FormInput\n            type='password'\n            title='Password'\n            name='password'\n            value={password}\n            customClass='inputLogin'\n            onChange={(e) => handleChange(e)}\n          />\n          <Button\n            title='Sign In'\n            customClass='inputLogin btn-register mt-3'\n            onClick={handleLogin}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n",["168","169"],"/home/amanudin/Documents/bootcamp/task/client/src/API/homeVideo.js",[],"/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/formAddVideo/index.jsx",["170","171"],"import FormInput from '../../atoms/formInput';\nimport FileInput from '../../atoms/fileInput';\nimport Textarea from '../../atoms/textarea';\nimport Button from '../../atoms/button';\nimport AddThumbnail from '../../../images/icon/addThumbnail.png';\nimport AddVideo from '../../../images/icon/addActive.png';\nimport './formAddVideo.css';\n\nimport React, { Fragment, useState } from 'react';\nimport { API } from '../../../config/api';\nimport { useHistory } from 'react-router-dom';\n\nexport default function FormAdd() {\n  const fileThumbnail = React.useRef();\n  const fileVideo = React.useRef();\n  const [formData, setFormData] = useState({\n    title: '',\n    thumbnail: '',\n    description: '',\n    video: '',\n  });\n  const { title, thumbnail, description, video } = formData;\n\n  const router = useHistory();\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n\n    const body = new FormData();\n    body.append('title', title);\n    body.append('description', description);\n    body.append('thumbnail', thumbnail);\n    body.append('video', video);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    };\n\n    try {\n      const response = await API.post('/video', body, config);\n      console.log(response);\n\n      if (response.data.status === 'Request failed') {\n        console.log('Error');\n      }\n      setFormData({\n        title: '',\n        thumbnail: '',\n        description: '',\n        video: '',\n      });\n      router.push('/channel/profile');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    const updateForm = { ...formData };\n    console.log(e.target.type);\n    updateForm[e.target.name] =\n      e.target.type === 'file' ? e.target.files[0] : e.target.value;\n    setFormData(updateForm);\n  };\n\n  console.log(formData);\n\n  return (\n    <Fragment>\n      <h5 className='mb-4 text-white'>Add Video</h5>\n      <form onSubmit={(e) => handleAdd(e)}>\n        <div className='row mb-3'>\n          <div className='col-md-8'>\n            <FormInput\n              title='Nama'\n              type='text'\n              name='title'\n              value={title}\n              onChange={(e) => handleChange(e)}\n              customClass='custom-form-control'\n            />\n          </div>\n          <div className='col-md-4'>\n            <FileInput\n              title='Attach Thumbnail'\n              type='file'\n              onChange={(e) => handleChange(e)}\n              name='thumbnail'\n              icon={AddThumbnail}\n              style={{\n                position: 'absolute',\n                width: '15px',\n                marginLeft: '250px',\n                top: '8px',\n                transform: 'translate(8px)',\n              }}\n            />\n          </div>\n        </div>\n        <Textarea\n          title='Description'\n          type='text'\n          customClass='custom-form-control mb-3'\n          onChange={(e) => handleChange(e)}\n          value={description}\n          name='description'\n        />\n        <FileInput\n          title='Upload Video'\n          type='file'\n          icon={AddVideo}\n          onChange={(e) => handleChange(e)}\n          name='video'\n          style={{\n            position: 'absolute',\n            width: '25px',\n            marginLeft: '250px',\n            paddingTop: '-9px',\n            top: '394px',\n            transform: 'translate(2px)',\n          }}\n        />\n        <Button\n          type='submit'\n          title='Add'\n          customClass='btn btn-orange custom-form-control mt-4'\n        />\n      </form>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/myChannel/index.jsx",["172","173"],"/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/sidebar/index.jsx",["174"],"import { Fragment, useEffect, useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport LogoSidebar from '../../../images/logo/logoApp.png';\nimport Home from '../../../images/icon/home.png';\nimport HomeActive from '../../../images/icon/homeActive.png';\nimport Sub from '../../../images/icon/sub.png';\nimport SubActive from '../../../images/icon/subActive.png';\nimport { API } from '../../../config/api';\nimport Button from '../../atoms/button';\nimport './sidebar.css';\nimport { AppContext } from '../../../context/appContext';\n\nexport default function Sidebar({ isHome, isSubscribed }) {\n  const [state, dispatch] = useContext(AppContext);\n  const [maxShow, setMaxShow] = useState(4);\n\n  const router = useHistory();\n\n  const showMore = () => {\n    setMaxShow(maxShow + 1);\n  };\n\n  const fetchSubscribers = async () => {\n    try {\n      const response = await API('/subscribes');\n      if (response.data.status === 'Request success') {\n        dispatch({\n          type: 'LOAD_SUBSCRIBTION',\n          payload: response.data.data,\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    fetchSubscribers();\n  }, []);\n\n  console.log(maxShow);\n\n  return (\n    <Fragment>\n      <div className='sideNew'>\n        <div className='logo-sidebar'>\n          <Link to='/'>\n            <img src={LogoSidebar} alt='' width='70%' height='60%' />\n          </Link>\n        </div>\n        <div className='page-landing'>\n          <ul>\n            <Link to='/'>\n              <li className={isHome ? 'active' : ''}>\n                <img src={isHome ? HomeActive : Home} alt='' /> Home\n              </li>\n            </Link>\n            <Link to='/subcribtion'>\n              <li className={isSubscribed ? 'active' : ''}>\n                <img src={!isSubscribed ? Sub : SubActive} alt='' />{' '}\n                Subscription\n              </li>\n            </Link>\n          </ul>\n        </div>\n        <div className='channel-list'>\n          {state.subscribtion && state.subscribtion.length > 0 && (\n            <h5>Channels</h5>\n          )}\n          <ul className='channelList'>\n            {state.subscribtion &&\n              state.subscribtion\n                .sort((a, b) => b.id - a.id)\n                .map((channel, index) =>\n                  state.subscribtion.indexOf(channel) > maxShow ? null : (\n                    <li\n                      key={index}\n                      style={{\n                        textOverflow: 'ellipsis',\n                        overflow: 'hidden',\n                        width: '100%',\n                        display: 'inline-block',\n                        whiteSpace: 'nowrap',\n                        cursor: 'pointer',\n                      }}\n                      onClick={() => {\n                        router.push(`/content-creator/${channel.id}`);\n                      }}\n                    >\n                      <img\n                        style={{\n                          width: '40px',\n                          height: '40px',\n                          borderRadius: '5px',\n                          objectFit: 'cover',\n                        }}\n                        src={JSON.parse(channel.photo).path}\n                        alt=''\n                      />\n                      {channel.channelName}\n                    </li>\n                  )\n                )}\n          </ul>\n          {maxShow > state.subscribtion.length ? null : (\n            <Button\n              title='Show More'\n              customClass='btn-secondary ml-4'\n              onClick={showMore}\n            />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/descriptionChannel/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/comment/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/API/myVideos.js",[],"/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/formEditChannel/index.jsx",["175","176","177"],"import { Fragment, useState, useContext } from 'react';\nimport FileInput from '../../atoms/fileInput';\nimport FormInput from '../../atoms/formInput';\nimport TextArea from '../../atoms/textarea';\nimport Button from '../../atoms/button';\nimport Galery from '../../../images/icon/galery.png';\nimport './formEditChannel.css';\nimport { API } from '../../../config/api';\nimport { AppContext } from '../../../context/appContext';\nimport { useHistory } from 'react-router-dom';\n\nexport default function FormEditChannel() {\n  const channel = JSON.parse(localStorage.getItem('user'));\n  const [formData, setFormData] = useState({\n    channelName: channel.channelName,\n    thumbnail: '',\n    description: channel.description,\n    photo: '',\n  });\n  const { channelName, thumbnail, description, photo } = formData;\n  const router = useHistory();\n\n  const body = new FormData();\n  body.append('channelName', channelName);\n  body.append('thumbnail', thumbnail);\n  body.append('description', description);\n  body.append('photo', photo);\n\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data',\n    },\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await API.patch(`channel/${channel.id}`, body, config);\n\n      setFormData({\n        channelName: '',\n        thumbnail: '',\n        description: '',\n        photo: '',\n      });\n\n      router.push('/channel/profile');\n      console.log(body);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    const updateForm = {\n      ...formData,\n    };\n    console.log(e.target.type);\n    updateForm[e.target.name] =\n      e.target.type === 'file' ? e.target.files[0] : e.target.value;\n    setFormData(updateForm);\n  };\n  console.log(formData);\n\n  return (\n    <Fragment>\n      <div className='line1 my-4'>\n        <FormInput\n          customClass='inputClass'\n          title='Channel Name'\n          value={channelName}\n          onChange={(e) => handleChange(e)}\n          name='channelName'\n        />\n        <FileInput\n          title='Upload Cover'\n          icon={Galery}\n          onChange={(e) => handleChange(e)}\n          style={{\n            position: 'absolute',\n            width: '25px',\n            marginLeft: '240px',\n            top: '143px',\n            transform: 'translate(13px, -12px)',\n          }}\n          name='thumbnail'\n        />\n      </div>\n      <TextArea\n        title='Description'\n        value={description}\n        customClass='areaClass mb-4'\n        onChange={(e) => handleChange(e)}\n        name='description'\n      />\n      <FileInput\n        title='Upload Photo'\n        icon={Galery}\n        onChange={(e) => handleChange(e)}\n        style={{\n          marginLeft: '250px',\n          position: 'absolute',\n          top: '390px',\n          transform: 'translate(0, -12px)',\n        }}\n        name='photo'\n      />\n      <Button\n        title='Save'\n        customClass='buttonEditChannel mt-4'\n        onClick={(e) => handleUpdate(e)}\n      />\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/navbar/index.jsx",["178","179"],"import LogoAdd from '../../../images/icon/add.png';\nimport LogoAddActive from '../../../images/icon/addActive.png';\nimport DefaultProfile from '../../../images/channel/defaultProfile.png';\nimport FormInput from '../../atoms/formInput';\nimport { Fragment, useContext, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport { BsFolderSymlink } from 'react-icons/bs';\nimport { FaRegUser } from 'react-icons/fa';\nimport { AppContext } from '../../../context/appContext';\nimport './navbar.css';\nimport { API } from '../../../config/api';\n\nexport default function Navbar({ isAddVideo, img, onChange }) {\n  const [state, dispatch] = useContext(AppContext);\n  const [loading, setLoading] = useState(true);\n  const [channel, setChannel] = useState();\n\n  const router = useHistory();\n\n  const fetchChannel = async () => {\n    try {\n      setLoading(true);\n      const response = await API('/channel');\n      setChannel(response.data.data.user);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleLogout = () => {\n    dispatch({\n      type: 'LOGOUT',\n    });\n  };\n\n  useEffect(() => {\n    fetchChannel();\n  }, []);\n\n  return (\n    <Fragment>\n      <div className='navNew fixed-top'>\n        <FormInput\n          type='text'\n          title='Search . . .'\n          customClass='navbar-search'\n          onChange={onChange}\n        />\n        <div className='addVideoNew'>\n          <Link to='/add-video'>\n            <img\n              src={isAddVideo ? LogoAddActive : LogoAdd}\n              alt=''\n              className='pr-3'\n            />{' '}\n            <span\n              className={\n                isAddVideo ? 'active pr-5 add-title' : 'pr-5 add-title'\n              }\n            >\n              Add Video\n            </span>\n          </Link>\n        </div>\n        <Dropdown>\n          <Dropdown.Toggle>\n            <div className='profileNew'>\n              <img\n                src={\n                  loading || !JSON.parse(channel.photo)\n                    ? DefaultProfile\n                    : JSON.parse(channel.photo).path\n                }\n                alt='photo'\n                width='100%'\n                height='100%'\n                style={{ borderRadius: '50%', objectFit: 'cover' }}\n              />\n            </div>\n          </Dropdown.Toggle>\n          <Dropdown.Menu\n            className='menu'\n            style={{ position: 'absolute', zIndex: 0 }}\n          >\n            <Dropdown.Item\n              className='text-white'\n              onClick={() => router.push('/channel/profile')}\n            >\n              <span style={{ paddingRight: '15px' }}>\n                <FaRegUser />\n              </span>{' '}\n              My Profile\n            </Dropdown.Item>\n            <Dropdown.Item className='text-white' onClick={handleLogout}>\n              <span style={{ paddingRight: '15px' }}>\n                <BsFolderSymlink />{' '}\n              </span>{' '}\n              Logout\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/contentCreator/index.jsx",["180","181","182"],"/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/Card/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/detailVideo/index.jsx",["183","184"],"import IconView from '../../../images/view1.png';\nimport IconDate from '../../../images/refresh1.png';\nimport TextArea from '../../atoms/textarea';\nimport Comment from '../comment';\nimport Card from '../Card';\n\n// library\nimport ReactPlayer from 'react-player';\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport './detailVideo.css';\nimport { API } from '../../../config/api';\nimport Moment from 'moment';\nimport { AppContext } from '../../../context/appContext';\nimport Button from '../../atoms/button';\n\nexport default function DetailVideo() {\n  const [state, dispatch] = useContext(AppContext);\n  const [video, setVideo] = useState('');\n  const [recomendationVideos, setRecomendationVideos] = useState([]);\n  const [maxShowVideos, setMaxShowVideos] = useState(3);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  let [isSubscribe, setIsSubscribe] = useState(false);\n  const [subscriber, setSubscriber] = useState();\n  const channel = JSON.parse(localStorage.getItem('user'));\n  const [formData, setFormData] = useState({\n    comment: '',\n  });\n\n  const { comment } = formData;\n  let { id } = useParams();\n  const router = useHistory();\n\n  const randomIndex = (max) => {\n    const randomNumber = [];\n\n    for (let i = 0; i < max; i++) {\n      let newNumber = Math.floor(Math.random() * max);\n\n      const checkNumber = randomNumber.indexOf(newNumber);\n\n      if (checkNumber < 0) {\n        randomNumber.push(newNumber);\n      } else {\n        i--;\n      }\n    }\n    return randomNumber;\n  };\n\n  const fetchVideos = async () => {\n    try {\n      const response = await API('/videos');\n      const numbers = randomIndex(response.data.data.videos.length);\n      let randomVideos = [];\n      numbers.map((number) =>\n        randomVideos.push(response.data.data.videos[number])\n      );\n      setRecomendationVideos(randomVideos);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const showMore = () => {\n    setMaxShowVideos(maxShowVideos + 2);\n  };\n\n  const fetchSubscribers = async () => {\n    try {\n      const subscribtions = await API('/subscribes');\n\n      if (subscribtions.data.status === 'Request success') {\n        dispatch({\n          type: 'LOAD_SUBSCRIBTION',\n          payload: subscribtions.data.data,\n        });\n        return;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchVideoById = async () => {\n    try {\n      setLoading(true);\n\n      const responseCommment = await API(`/video/${id}/comments`);\n      setComments(responseCommment.data.data.comments);\n\n      const response = await API(`/video/${id}`);\n      setVideo(response.data.data.video);\n      setSubscriber(response.data.data.video.channel.subscribers.length);\n\n      // setIsSubscribe(false);\n\n      const checkSubscribe = await API(\n        `/subscribe/${response.data.data.video.channel.id}`\n      );\n      checkSubscribe.data.status === 'Request failed'\n        ? setIsSubscribe(false)\n        : setIsSubscribe(true);\n\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const subscribe = async () => {\n    try {\n      const response = await API.post(`/subscribe/${video.channel.id}`);\n      console.log(response);\n      if (response.data.status === 'Request success') {\n        setSubscriber(subscriber + 1);\n\n        const subscribe = [...state.subscribtion];\n        subscribe.push(response.data.data.subscribed);\n\n        const afterSubscribe = {\n          subscribtion: subscribe,\n        };\n\n        dispatch({\n          type: 'SUBSCRIBE',\n          payload: afterSubscribe,\n        });\n        setIsSubscribe((isSubscribe = !isSubscribe));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const unSubscribe = async () => {\n    try {\n      const response = await API.delete(`/subscribe/${video.channel.id}`);\n      if (response.data.status === 'Request success') {\n        const indexUnsubscribe = state.subscribtion.findIndex(\n          (subscribtion) => subscribtion.id === parseInt(response.data.data.id)\n        );\n\n        const subscribe = [...state.subscribtion];\n        subscribe.splice(indexUnsubscribe, 1);\n\n        const afterUnsubscribe = {\n          subscribtion: subscribe,\n        };\n\n        dispatch({\n          type: 'UNSUBSCRIBE',\n          payload: afterUnsubscribe,\n        });\n        setSubscriber(subscriber - 1);\n        setIsSubscribe((isSubscribe = !isSubscribe));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleAddComment = async (e) => {\n    e.preventDefault();\n    const body = formData;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const response = await API.post(`/video/${id}/comment`, body, config);\n      const newComment = response.data.data.comment;\n\n      setComments([...comments, newComment]);\n      setFormData({ comment: '' });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    fetchVideoById();\n    fetchSubscribers();\n    fetchVideos();\n  }, [id]);\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const date = Moment(video.createdAt).format('ll');\n\n  console.log(channel);\n\n  return loading ? (\n    <h1\n      className='text-warning d-flex flex-column'\n      style={{ position: 'absolute', top: '40%', left: '50%' }}\n    >\n      <div\n        className='spinner-grow text-warning'\n        style={{ width: '6rem', height: '6rem' }}\n        role='status'\n      ></div>\n      <span className='spinner' style={{ marginLeft: '-20px' }}>\n        Loading...\n      </span>\n    </h1>\n  ) : (\n    <div>\n      <div className='d-flex contentNew'>\n        <div className='contentDetail'>\n          <div className='videoDetail'>\n            <ReactPlayer\n              width='100%'\n              style={{ border: 'none' }}\n              controls\n              url={video.video}\n            />\n            <div className='desc-video'>\n              <h5\n                style={{ color: '#fff', fontWeight: '500', marginTop: '20px' }}\n              >\n                {video.title}\n              </h5>\n              <div className='views'>\n                <span style={{ marginRight: '30px' }}>\n                  <img src={IconView} alt='' className='mr-2 ml-2' />\n                  {video.viewCount}\n                </span>\n                <img src={IconDate} alt='' className='mr-2' />\n                <span>{date}</span>\n                <hr color='white' style={{ border: '.5px solid' }} />\n              </div>\n              <div className='video-profile-wrapper d-flex justify-content-between'>\n                <div\n                  className='video-profile d-flex '\n                  onClick={\n                    video.channel.id === channel.id\n                      ? () => router.push(`/channel/profile`)\n                      : () =>\n                          router.push(`/content-creator/${video.channel.id}`)\n                  }\n                  style={{ cursor: 'pointer' }}\n                >\n                  <img\n                    src={JSON.parse(video.channel.photo).path}\n                    alt=''\n                    width='50%'\n                    height='50%'\n                    style={{ marginRight: '10px', objectFit: 'cover' }}\n                  />\n                  <div style={{ width: '500px' }}>\n                    <h6 className='text-white' style={{ whiteSpace: 'nowrap' }}>\n                      {loading || !video ? '0' : video.channel.channelName}\n                    </h6>\n                    <p style={{ fontWeight: '400' }}>{subscriber} Subscriber</p>\n                  </div>\n                </div>\n                {channel.id == video.channel.id ? null : (\n                  <div className='video-sub-button'>\n                    <button\n                      className={\n                        isSubscribe ? 'btn btn-secondary' : 'btn btn-custom'\n                      }\n                      onClick={isSubscribe ? unSubscribe : subscribe}\n                    >\n                      {isSubscribe ? 'Unsubscribe' : 'Subscribe'}\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <hr color='white' style={{ border: '2px solid' }} />\n          </div>\n          <div className='areaComment'>\n            <div className='comment d-flex'>\n              <img\n                src={JSON.parse(channel.photo).path}\n                alt=''\n                width='45px'\n                height='60px'\n                style={{ objectFit: 'cover' }}\n              />\n              <div className='textarea'>\n                <TextArea\n                  title='Add a comment . . .'\n                  className='ml-4'\n                  value={comment}\n                  name='comment'\n                  onChange={handleChange}\n                />\n              </div>\n            </div>\n            <div className='buttonComment mt-2'>\n              <button\n                className='btn btnComment'\n                onClick={(e) => handleAddComment(e)}\n              >\n                Post\n              </button>\n            </div>\n            {comments\n              .sort((a, b) => b.id - a.id)\n              .map((comment, index) => (\n                <Comment\n                  key={index}\n                  channel={comment.channel.channelName}\n                  img={JSON.parse(comment.channel.photo).path}\n                  text={comment.comment}\n                />\n              ))}\n          </div>\n        </div>\n        <div className='recomendation'>\n          <h5 className='text-white'> Recomendation</h5>\n          <hr color='white' />\n          {recomendationVideos.map((recomendationVideo, index) =>\n            recomendationVideos.indexOf(recomendationVideo) >\n            maxShowVideos ? null : recomendationVideo.id === video.id ? null : (\n              <Card\n                key={recomendationVideo.id}\n                id={recomendationVideo.id}\n                title={recomendationVideo.title}\n                channel={recomendationVideo.channel.channelName}\n                image={recomendationVideo.thumbnail}\n                views={recomendationVideo.viewCount}\n                date={Moment(recomendationVideo.createdAt).format('ll')}\n              />\n            )\n          )}\n\n          {maxShowVideos > recomendationVideos.length ? null : (\n            <div className='d-flex justify-content-end'>\n              <Button\n                title='Show More'\n                onClick={showMore}\n                customClass='btn btn-sm btn-secondary'\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/myVideos/index.jsx",["185","186"],"import Card from '../Card';\nimport MyVideos from '../../../API/myVideos';\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../../../context/appContext';\nimport { API } from '../../../config/api';\nimport Moment from 'moment';\n\nexport default function Videos() {\n  const [state] = useContext(AppContext);\n  const [channel, setChannel] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const fetchChannel = async () => {\n    try {\n      setLoading(true);\n      const response = await API('/channel');\n      setChannel(response.data.data.user);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchChannel();\n  }, []);\n\n  //? Render\n  return loading || channel.videos.length === 0 ? (\n    <div className=' row justify-content-center pt-5'>\n      <h3 className=''>You are not yet upload a video</h3>\n    </div>\n  ) : (\n    <div className='row'>\n      {channel.videos\n        .sort((a, b) => b.id - a.id)\n        .map((video) => (\n          <div className='col-md-3' key={video.id}>\n            <Card\n              id={video.id}\n              title={video.title}\n              channel={channel.channelName}\n              image={video.thumbnail}\n              views={video.viewCount}\n              date={Moment(video.createdAt).format('ll')}\n            />\n          </div>\n        ))}\n    </div>\n  );\n}\n","/home/amanudin/Documents/bootcamp/task/client/src/config/api.js",[],"/home/amanudin/Documents/bootcamp/task/client/src/pages/myChannel/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/register/index.jsx",["187"],"import FormInput from '../../atoms/formInput';\nimport Textarea from '../../atoms/textarea';\nimport Button from '../../atoms/button';\nimport { Fragment, useState, useContext } from 'react';\nimport './register.css';\nimport { API, setToken } from '../../../config/api';\nimport { AppContext } from '../../../context/appContext';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Reqister({ isRegister }) {\n  const [state, dispatch] = useContext(AppContext);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    channelName: '',\n    description: '',\n  });\n\n  const router = useHistory();\n\n  const { email, password, channelName, description } = formData;\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    const body = formData;\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const response = await API.post('/register', body, config);\n\n      //? Context\n      dispatch({\n        type: 'LOGIN',\n        payload: response.data.data.channel,\n      });\n\n      //? take a token\n      setToken(response.data.data.channel.token);\n\n      setFormData({\n        email: '',\n        password: '',\n        channelName: '',\n        description: '',\n      });\n\n      //? Route\n      router.push('/');\n      return isRegister();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Fragment>\n      <div className='wrapper'>\n        <div className='wrapper-form'>\n          <h3 className='text-white'>Sign Up</h3>\n          <form onSubmit={(e) => handleAdd(e)}>\n            <FormInput\n              type='text'\n              title='Email'\n              customClass='inputRegister'\n              value={email}\n              name='email'\n              onChange={(e) => handleChange(e)}\n            />\n            <FormInput\n              type='password'\n              title='Password'\n              customClass='inputRegister'\n              value={password}\n              name='password'\n              onChange={(e) => handleChange(e)}\n            />\n            <FormInput\n              type='text'\n              title='Name Channel'\n              customClass='inputRegister'\n              value={channelName}\n              name='channelName'\n              onChange={(e) => handleChange(e)}\n            />\n            <Textarea\n              title='Description'\n              customClass='inputRegister'\n              rows='4'\n              value={description}\n              name='description'\n              onChange={(e) => handleChange(e)}\n            />\n            <Button\n              title='Sign Up'\n              customClass='inputRegister btn-register'\n              type='submit'\n            />\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/task/client/src/components/atoms/textarea/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/components/atoms/fileInput/index.jsx",[],["188","189"],"/home/amanudin/Documents/bootcamp/task/client/src/components/atoms/button/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/pages/home/index.jsx",["190","191"],"/home/amanudin/Documents/bootcamp/task/client/src/pages/addVideo/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/components/privateRoute/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/components/atoms/formInput/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/pages/detailVideo/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/components/molecules/mainMenu/index.js",["192","193"],"import { Fragment, useContext } from 'react';\nimport Sidebar from '../sidebar';\nimport Navbar from '../navbar';\nimport './mainMenu.css';\nimport { AppContext } from '../../../context/appContext';\n\nexport default function Menu({\n  isHome,\n  isSubscribed,\n  isAddVideo,\n  onChangeSearch,\n}) {\n  // const [state, dispatch] = useContext(AppContext);\n  // const { channel } = state;\n\n  // console.log(channel);\n  return (\n    <Fragment>\n      <Sidebar isHome={isHome} isSubscribed={isSubscribed} />\n      <Navbar isAddVideo={isAddVideo} onChange={onChangeSearch} />\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/task/client/src/App.js",["194","195","196"],"/home/amanudin/Documents/bootcamp/task/client/src/pages/mySubscribers/index.jsx",[],"/home/amanudin/Documents/bootcamp/task/client/src/pages/subscriber/index.jsx",["197"],"import { useEffect, useState } from 'react';\nimport MainMenu from '../../components/molecules/mainMenu';\nimport { useParams } from 'react-router-dom';\nimport { API } from '../../config/api';\n\nconst Subscriber = () => {\n  const [channel, setChannel] = useState([]);\n\n  const { id } = useParams();\n\n  const getChannel = async () => {\n    try {\n      const response = await API(`/channel/${id}`);\n      setChannel(response.data.data.channel.subscribers);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getChannel();\n  }, []);\n  return (\n    <div>\n      <MainMenu />\n      <div\n        className='container'\n        style={{ marginLeft: '265px', paddingTop: '110px', width: '1063px' }}\n      >\n        <h2 className='text-white'>Subscriber</h2>\n        <hr color='white' width='16%' />\n        <div className='row'>\n          {channel.map((channel) => {\n            return (\n              <div className='col-3 mb-3'>\n                <div\n                  className='subscriber d-flex'\n                  style={{\n                    width: '250px',\n                    padding: '10px 20px',\n                    height: '70px',\n                    background: '#161616',\n                    borderRadius: '5px ',\n                  }}\n                >\n                  <div\n                    className='img'\n                    style={{ marginRight: '20px', width: '70px' }}\n                  >\n                    <img\n                      src={JSON.parse(channel.photo).path}\n                      alt='img'\n                      width='100%'\n                      height='100%'\n                      style={{\n                        objectFit: 'cover',\n                        borderRadius: '50%',\n                      }}\n                    />\n                  </div>\n                  <div\n                    className='channels'\n                    style={{\n                      textOverflow: 'ellipsis',\n                      overflow: 'hidden',\n                      width: '100%',\n                      display: 'inline-block',\n                      whiteSpace: 'nowrap',\n                    }}\n                  >\n                    <h6 className='text-white'>{channel.channelName}</h6>\n                    <p>\n                      {channel.subscribers && channel.subscribers.length}{' '}\n                      Subscriber\n                    </p>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Subscriber;\n","/home/amanudin/Documents/bootcamp/task/client/src/reportWebVitals.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"198","replacedBy":"202"},{"ruleId":"200","replacedBy":"203"},{"ruleId":"198","replacedBy":"204"},{"ruleId":"200","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":10,"column":10,"nodeType":"208","messageId":"209","endLine":10,"endColumn":15},{"ruleId":"198","replacedBy":"210"},{"ruleId":"200","replacedBy":"211"},{"ruleId":"206","severity":1,"message":"212","line":14,"column":9,"nodeType":"208","messageId":"209","endLine":14,"endColumn":22},{"ruleId":"206","severity":1,"message":"213","line":15,"column":9,"nodeType":"208","messageId":"209","endLine":15,"endColumn":18},{"ruleId":"206","severity":1,"message":"214","line":15,"column":9,"nodeType":"208","messageId":"209","endLine":15,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":75,"column":15,"nodeType":"217","endLine":85,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":38,"column":6,"nodeType":"220","endLine":38,"endColumn":8,"suggestions":"221"},{"ruleId":"206","severity":1,"message":"222","line":1,"column":30,"nodeType":"208","messageId":"209","endLine":1,"endColumn":40},{"ruleId":"206","severity":1,"message":"223","line":9,"column":10,"nodeType":"208","messageId":"209","endLine":9,"endColumn":20},{"ruleId":"206","severity":1,"message":"224","line":38,"column":13,"nodeType":"208","messageId":"209","endLine":38,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":15,"column":10,"nodeType":"208","messageId":"209","endLine":15,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":69,"column":15,"nodeType":"217","endLine":79,"endColumn":17},{"ruleId":"206","severity":1,"message":"225","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":22},{"ruleId":"218","severity":1,"message":"226","line":164,"column":6,"nodeType":"220","endLine":164,"endColumn":10,"suggestions":"227"},{"ruleId":"215","severity":1,"message":"216","line":195,"column":13,"nodeType":"217","endLine":201,"endColumn":15},{"ruleId":"218","severity":1,"message":"228","line":185,"column":6,"nodeType":"220","endLine":185,"endColumn":10,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":259,"column":29,"nodeType":"232","messageId":"233","endLine":259,"endColumn":31},{"ruleId":"206","severity":1,"message":"234","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":9,"column":10,"nodeType":"208","messageId":"209","endLine":9,"endColumn":15},{"ruleId":"206","severity":1,"message":"207","line":11,"column":10,"nodeType":"208","messageId":"209","endLine":11,"endColumn":15},{"ruleId":"198","replacedBy":"235"},{"ruleId":"200","replacedBy":"236"},{"ruleId":"206","severity":1,"message":"237","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":15},{"ruleId":"238","severity":1,"message":"239","line":98,"column":30,"nodeType":"240","messageId":"241","endLine":98,"endColumn":32},{"ruleId":"206","severity":1,"message":"222","line":1,"column":20,"nodeType":"208","messageId":"209","endLine":1,"endColumn":30},{"ruleId":"206","severity":1,"message":"223","line":5,"column":10,"nodeType":"208","messageId":"209","endLine":5,"endColumn":20},{"ruleId":"206","severity":1,"message":"242","line":20,"column":8,"nodeType":"208","messageId":"209","endLine":20,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":28,"column":10,"nodeType":"208","messageId":"209","endLine":28,"endColumn":15},{"ruleId":"218","severity":1,"message":"243","line":56,"column":6,"nodeType":"220","endLine":56,"endColumn":8,"suggestions":"244"},{"ruleId":"218","severity":1,"message":"245","line":22,"column":6,"nodeType":"220","endLine":22,"endColumn":8,"suggestions":"246"},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],["247"],["248"],["247"],["248"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar",["247"],["248"],"'fileThumbnail' is assigned a value but never used.","'fileVideo' is assigned a value but never used.","'router' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSubscribers'. Either include it or remove the dependency array.","ArrayExpression",["249"],"'useContext' is defined but never used.","'AppContext' is defined but never used.","'response' is assigned a value but never used.","'DefaultProfile' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchChannel' and 'fetchSubscribers'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'fetchSubscribers', 'fetchVideoById', and 'fetchVideos'. Either include them or remove the dependency array.",["251"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MyVideos' is defined but never used.",["247"],["248"],"'Channel' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'MySubscribersPage' is defined but never used.","React Hook useEffect has a missing dependency: 'loadChannel'. Either include it or remove the dependency array.",["252"],"React Hook useEffect has a missing dependency: 'getChannel'. Either include it or remove the dependency array.",["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [fetchSubscribers]",{"range":"264","text":"265"},"Update the dependencies array to be: [fetchChannel, fetchSubscribers, id]",{"range":"266","text":"267"},"Update the dependencies array to be: [fetchSubscribers, fetchVideoById, fetchVideos, id]",{"range":"268","text":"269"},"Update the dependencies array to be: [loadChannel]",{"range":"270","text":"271"},"Update the dependencies array to be: [getChannel]",{"range":"272","text":"273"},[1194,1196],"[fetchSubscribers]",[4670,4674],"[fetchChannel, fetchSubscribers, id]",[5113,5117],"[fetchSubscribers, fetchVideoById, fetchVideos, id]",[1527,1529],"[loadChannel]",[551,553],"[getChannel]"]